分布式调度verson 2 说明
 
一.项目范围

项目需要满足以下需求：

1.程序的快速部署
2.分布式的调度
3.自动建立程序间依赖关系
4.接入质控系统、实现与指控的联动
5.自动化/可配置的异常处理
6.web友好的交互见面


1.1程序分布式部署
实现程序自动化部署
web上传结合配置文件信息。

1.2分布式的调度
抓取程序：按照执行计划（时间）执行
计算程序：根据依赖关系执行

1.3自动建立程序间依赖关系
通过程序相关联的表 建立程序的相互依赖
程序相关联的表包括程序 依赖的表和程序结果输出表

1.4接入质控系统、实现与指控的联动
自动发起质控行为， 
发现质控结果， 
返回处理结果。

1.5自动化/可配置异常处理
根据质控结果自动化处理
处理的方式需要实现可配置

1.6web友好的交互见面
暂时实现以下功能
1.数据展示，包括程序部署情况，执行情况
2.程序部署
3.异常处理控制


二、项目结构
 master - slave
	|
  mysql - web 

web端： 1.数据展示，包括程序部署情况，执行情况
		2.程序部署，包括添加数据库记录 和 程序上传
		3.异常处理控制方式的控制

master ：1.执行计划监控
		 2.根据依赖关系生成执行计划
		 3.执行计划分发
		 4.异常处理
		 5.日志记录

slave： 1.执行程序调度，两种方式计划任务列表和 master推送
		2.监控程序异常
		3.返回执行结果

		
三、项目需要解决的问题
1. 明确java的调用方式以及API接口

2. 明确异常处理的接口
目前程序异常有3个数据来源：
1.slave端监控（胡睿智）
2.java程序自身的异常捕获（需要java组定义）
3.质量控制（邓磊）:
	调取方式
	结果获取方式
	处理结果返回方式
